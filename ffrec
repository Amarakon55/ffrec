#!/bin/sh

main() {
	parse_ffmpeg_opts "$@"

	dir=~/.local/share/ffrec
	mon=":0.0+$(randr | awk -F '+' '{print $2","$3}')"
	[ -z $FFMPEG_AUDIO_EXT ] && FFMPEG_AUDIO_EXT="flac"
	[ -z $FFMPEG_OPTS ] && FFMPEG_OPTS="-hide_banner -c:v libx264 -r 60 -c:a $FFMPEG_AUDIO_EXT -preset ultrafast"
	[ -z $FFMPEG_DISPLAY_EXT ] && FFMPEG_DISPLAY_EXT="mkv"
	size="$(randr | cut -d '+' -f1)"
	title="ffmpeg-$(date +'%Y-%m-%d_%R:%S')"
	trap 'rm -f "$TMPFILE"' EXIT
        TMPFILE=$(mktemp -t $title.XXXXXXX) || exit 1

	if [ -n "$help" ]; then
	    help
	elif [ -n "$pause" ]; then
	    ffmpegcheck="$(pgrep ffmpeg | wc -l)"
	    ffmpegcheckid="$(pgrep ffmpeg | tail -1)"
	    
	    [ "$ffmpegcheck" -ge 1 ] && ffmpegpause="$(grep State /proc/$ffmpegcheckid/status | cut -d '(' -f2 | cut -d ')' -f1)"

	    if [ "$ffmpegpause" = "stopped" ]; then
		pkill -CONT ffmpeg
	    else
		pkill -STOP ffmpeg
	    fi
	elif [ -n "$end" ]; then
	    pkill -STOP ffmpeg; pkill ffmpeg && pkill -CONT ffmpeg
	elif [ -n "$dmenu" ]; then
	    cmd="$(printf 'audio\ndisplay\nwebcam' | dmenu -i -p 'FFrec' | tr '\n' ' ')"
	    if [ "$cmd" = "audio " ]; then
		record_audio
	    elif [ "$cmd" = "display " ]; then
		record_display
	    elif [ "$cmd" = "audio display " ]; then
		record_both
	    elif [ "$cmd" = "webcam " ]; then
		record_webcam
	    fi

	elif [ -n "$audio" -a -n "$display" ]; then
	    record_both
	elif [ -n "$audio" ]; then
	    record_audio
	elif [ -n "$display" ]; then
	    record_display
	elif [ -n "$webcam" ]; then
	    record_webcam
	else
	    help
	fi
}

record_audio() {
    [ ! -d $dir/Audio ] && mkdir -p $dir/Audio
    ffmpeg -n -f alsa -i default $opts "$dir/Audio/$title.$FFMPEG_AUDIO_EXT"
}

record_display() {
    [ ! -d $dir/Display ] && mkdir -p $dir/Display
    ffmpeg -n -f x11grab -s "$size" -i "$mon" $FFMPEG_OPTS "$dir/Display/$title.$FFMPEG_DISPLAY_EXT" 2> $TMPFILE
}

record_both() {
    [ ! -d $dir/Display ] && mkdir -p $dir/Display
    ffmpeg -n -f alsa -i default -f x11grab -s "$size" -i "$mon" $FFMPEG_OPTS "$dir/Display/$title.$FFMPEG_DISPLAY_EXT"
}

record_webcam(){
    [ ! -d $dir/Webcam ] && mkdir -p $dir/Webcam
    ffmpeg -n -f v4l2 -i /dev/video0 $FFMPEG_OPTS "$dir/Webcam/$title.$FFMPEG_DISPLAY_EXT"
}

record_audiocam(){
    [ ! -d $dir/Webcam ] && mkdir -p $dir/Webcam
    ffmpeg -n -f alsa -i default -f v4l2 -i /dev/video0 $FFMPEG_OPTS "$dir/Webcam/$title.$FFMPEG_DISPLAY_EXT"
}

randr() {
    xrandr | grep primary | cut -d ' ' -f 4
}

help() {
    printf "Usage:	ffrec [option]

Options:
-a|--audio   │ Record audio
-d|--display │ Record display
-w|--webcam  │ Record webcam
-D|--dmenu   │ Use Dmenu to choose what to record
-p|--pause   │ Pause the recording
-e|--end     │ End the recording
-h|--help    │ Print this help message and exit
\n"
}

parse_ffmpeg_opts() {
    while [ $# -gt 0 ]; do
        key="$1"
	case $key in
	-h|--help)
	    help=1
	    shift
	    ;;
	-p|--pause)
	    pause=1
	    shift
	    ;;
	-e|--end)
	    end=1
	    shift
	    ;;
	-D|--dmenu)
	    dmenu=1
	    shift
	    ;;
        -a|--audio)
            audio=1
            shift
            ;;
        -d|--display)
            display=1
            shift
            ;;
	-ad|-da)
	    audio=1
	    display=1
	    shift
	    ;;
	-w|--webcam)
	    webcam=1
	    shift
	    ;;
	-aw|-wa)
	    audio=1
	    webcam=1
	    shift
	    ;;
        *)
            shift
            ;;
        esac
    done
}

main "$@"
